# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Add date formatting options."
directive @dateformat(difference: String, formatString: String, fromNow: Boolean, locale: String) on FIELD_DEFINITION

"Link to node by foreign-key relation."
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

"Link to File node by relative path."
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

"Proxy resolver from another field."
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

"Infer field types from field values."
directive @infer on OBJECT

"Do not infer field types from field values."
directive @dontInfer on OBJECT

"Define the mime-types handled by this type."
directive @mimeTypes(
    "The mime-types handled by this type."
    types: [String!]! = []
) on OBJECT

"Define parent-child relations between types. This is used to add `child*` and `children*` convenience fields like `childImageSharp`."
directive @childOf(
    "A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin."
    mimeTypes: [String!]! = [],
    "A list of types this type is a child of. Usually these are the types handled by a transformer plugin."
    types: [String!]! = []
) on OBJECT

"""

DEPRECATED: Use interface inheritance instead, i.e. "interface Foo implements Node".

Adds root query fields for an interface. All implementing types must also implement the Node interface.
"""
directive @nodeInterface on INTERFACE

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

"A Sanity document"
interface SanityDocument {
    _createdAt: Date
    _id: String
    _rev: String
    _type: String
    _updatedAt: Date
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    max(field: DirectoryFieldsEnum!): Float
    min(field: DirectoryFieldsEnum!): Float
    nodes: [Directory!]!
    pageInfo: PageInfo!
    sum(field: DirectoryFieldsEnum!): Float
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason: "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    "Returns the first child node of type Mdx or null if there are no children of given type on this node"
    childMdx: Mdx
    children: [Node!]!
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    "Returns all children nodes filtered by type Mdx"
    childrenMdx: [Mdx]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    max(field: FileFieldsEnum!): Float
    min(field: FileFieldsEnum!): Float
    nodes: [File!]!
    pageInfo: PageInfo!
    sum(field: FileFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    max(field: ImageSharpFieldsEnum!): Float
    min(field: ImageSharpFieldsEnum!): Float
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    sum(field: ImageSharpFieldsEnum!): Float
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type Mdx implements Node {
    body: String!
    children: [Node!]!
    excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!
    fileAbsolutePath: String!
    frontmatter: MdxFrontmatter
    headings(depth: HeadingsMdx): [MdxHeadingMdx]
    html: String
    id: ID!
    internal: Internal!
    mdxAST: JSON
    parent: Node
    rawBody: String!
    slug: String
    tableOfContents(maxDepth: Int): JSON
    timeToRead: Int
    wordCount: MdxWordCount
}

type MdxConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxEdge {
    next: Mdx
    node: Mdx!
    previous: Mdx
}

type MdxFrontmatter {
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    description: String
    title: String!
}

type MdxGroupConnection {
    distinct(field: MdxFieldsEnum!): [String!]!
    edges: [MdxEdge!]!
    field: String!
    fieldValue: String
    group(field: MdxFieldsEnum!, limit: Int, skip: Int): [MdxGroupConnection!]!
    max(field: MdxFieldsEnum!): Float
    min(field: MdxFieldsEnum!): Float
    nodes: [Mdx!]!
    pageInfo: PageInfo!
    sum(field: MdxFieldsEnum!): Float
    totalCount: Int!
}

type MdxHeadingMdx {
    depth: Int
    value: String
}

type MdxWordCount {
    paragraphs: Int
    sentences: Int
    words: Int
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allMdx(filter: MdxFilterInput, limit: Int, skip: Int, sort: MdxSortInput): MdxConnection!
    allSanityEpisode(filter: SanityEpisodeFilterInput, limit: Int, skip: Int, sort: SanityEpisodeSortInput): SanityEpisodeConnection!
    allSanityFileAsset(filter: SanityFileAssetFilterInput, limit: Int, skip: Int, sort: SanityFileAssetSortInput): SanityFileAssetConnection!
    allSanityGuest(filter: SanityGuestFilterInput, limit: Int, skip: Int, sort: SanityGuestSortInput): SanityGuestConnection!
    allSanityImageAsset(filter: SanityImageAssetFilterInput, limit: Int, skip: Int, sort: SanityImageAssetSortInput): SanityImageAssetConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSiteFunction(filter: SiteFunctionFilterInput, limit: Int, skip: Int, sort: SiteFunctionSortInput): SiteFunctionConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, childMdx: MdxFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, childrenMdx: MdxFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    mdx(body: StringQueryOperatorInput, children: NodeFilterListInput, excerpt: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mdxAST: JSONQueryOperatorInput, parent: NodeFilterInput, rawBody: StringQueryOperatorInput, slug: StringQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput): Mdx
    sanityEpisode(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawGuest: JSONQueryOperatorInput, _rawHost: JSONQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rawTags: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, date: DateQueryOperatorInput, demo: StringQueryOperatorInput, description: StringQueryOperatorInput, featured: BooleanQueryOperatorInput, gatsbyPath: StringQueryOperatorInput, guest: SanityGuestFilterListInput, hidden: BooleanQueryOperatorInput, host: SanityGuestFilterInput, id: StringQueryOperatorInput, image: SanityEpisodeImageFilterInput, internal: InternalFilterInput, links: StringQueryOperatorInput, parent: NodeFilterInput, repo: StringQueryOperatorInput, slug: SanitySlugFilterInput, tags: SanityTagFilterListInput, title: StringQueryOperatorInput, transcript: StringQueryOperatorInput, youtubeID: StringQueryOperatorInput): SanityEpisode
    sanityFileAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, altText: StringQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityFileAsset
    sanityGuest(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawGuestImage: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, guestImage: SanityImageFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, twitter: StringQueryOperatorInput): SanityGuest
    sanityImageAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawMetadata: JSONQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, altText: StringQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, metadata: SanityImageMetadataFilterInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityImageAsset
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, jsxRuntime: StringQueryOperatorInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    siteFunction(absoluteCompiledFilePath: StringQueryOperatorInput, children: NodeFilterListInput, functionRoute: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, matchPath: StringQueryOperatorInput, originalAbsoluteFilePath: StringQueryOperatorInput, originalRelativeFilePath: StringQueryOperatorInput, parent: NodeFilterInput, pluginName: StringQueryOperatorInput, relativeCompiledFilePath: StringQueryOperatorInput): SiteFunction
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, pageContext: JSONQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: JSONQueryOperatorInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: JSONQueryOperatorInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type SanityAssetSourceData {
    _key: String
    _type: String
    id: String
    name: String
    url: String
}

type SanityBlock {
    _key: String
    _rawChildren(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    children: [SanitySpan]
    list: String
    style: String
}

type SanityEpisode implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawGuest(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawHost(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawTags(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    date(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    demo: String
    description: String
    featured: Boolean
    gatsbyPath(filePath: String): String
    guest: [SanityGuest]
    hidden: Boolean
    host: SanityGuest
    id: ID!
    image: SanityEpisodeImage
    internal: Internal!
    links: [String]
    parent: Node
    repo: String
    slug: SanitySlug
    tags: [SanityTag]
    title: String
    transcript: String
    youtubeID: String
}

type SanityEpisodeConnection {
    distinct(field: SanityEpisodeFieldsEnum!): [String!]!
    edges: [SanityEpisodeEdge!]!
    group(field: SanityEpisodeFieldsEnum!, limit: Int, skip: Int): [SanityEpisodeGroupConnection!]!
    max(field: SanityEpisodeFieldsEnum!): Float
    min(field: SanityEpisodeFieldsEnum!): Float
    nodes: [SanityEpisode!]!
    pageInfo: PageInfo!
    sum(field: SanityEpisodeFieldsEnum!): Float
    totalCount: Int!
}

type SanityEpisodeEdge {
    next: SanityEpisode
    node: SanityEpisode!
    previous: SanityEpisode
}

type SanityEpisodeGroupConnection {
    distinct(field: SanityEpisodeFieldsEnum!): [String!]!
    edges: [SanityEpisodeEdge!]!
    field: String!
    fieldValue: String
    group(field: SanityEpisodeFieldsEnum!, limit: Int, skip: Int): [SanityEpisodeGroupConnection!]!
    max(field: SanityEpisodeFieldsEnum!): Float
    min(field: SanityEpisodeFieldsEnum!): Float
    nodes: [SanityEpisode!]!
    pageInfo: PageInfo!
    sum(field: SanityEpisodeFieldsEnum!): Float
    totalCount: Int!
}

type SanityEpisodeImage {
    _key: String
    _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    alt: String
    asset: SanityImageAsset
    crop: SanityImageCrop
    hotspot: SanityImageHotspot
}

type SanityFile {
    _key: String
    _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    asset: SanityFileAsset
}

type SanityFileAsset implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    altText: String
    assetId: String
    children: [Node!]!
    description: String
    extension: String
    id: ID!
    internal: Internal!
    label: String
    mimeType: String
    originalFilename: String
    parent: Node
    path: String
    sha1hash: String
    size: Float
    source: SanityAssetSourceData
    title: String
    url: String
}

type SanityFileAssetConnection {
    distinct(field: SanityFileAssetFieldsEnum!): [String!]!
    edges: [SanityFileAssetEdge!]!
    group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
    max(field: SanityFileAssetFieldsEnum!): Float
    min(field: SanityFileAssetFieldsEnum!): Float
    nodes: [SanityFileAsset!]!
    pageInfo: PageInfo!
    sum(field: SanityFileAssetFieldsEnum!): Float
    totalCount: Int!
}

type SanityFileAssetEdge {
    next: SanityFileAsset
    node: SanityFileAsset!
    previous: SanityFileAsset
}

type SanityFileAssetGroupConnection {
    distinct(field: SanityFileAssetFieldsEnum!): [String!]!
    edges: [SanityFileAssetEdge!]!
    field: String!
    fieldValue: String
    group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
    max(field: SanityFileAssetFieldsEnum!): Float
    min(field: SanityFileAssetFieldsEnum!): Float
    nodes: [SanityFileAsset!]!
    pageInfo: PageInfo!
    sum(field: SanityFileAssetFieldsEnum!): Float
    totalCount: Int!
}

type SanityGeopoint {
    _key: String
    _type: String
    alt: Float
    lat: Float
    lng: Float
}

type SanityGuest implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawGuestImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    guestImage: SanityImage
    id: ID!
    internal: Internal!
    name: String
    parent: Node
    twitter: String
}

type SanityGuestConnection {
    distinct(field: SanityGuestFieldsEnum!): [String!]!
    edges: [SanityGuestEdge!]!
    group(field: SanityGuestFieldsEnum!, limit: Int, skip: Int): [SanityGuestGroupConnection!]!
    max(field: SanityGuestFieldsEnum!): Float
    min(field: SanityGuestFieldsEnum!): Float
    nodes: [SanityGuest!]!
    pageInfo: PageInfo!
    sum(field: SanityGuestFieldsEnum!): Float
    totalCount: Int!
}

type SanityGuestEdge {
    next: SanityGuest
    node: SanityGuest!
    previous: SanityGuest
}

type SanityGuestGroupConnection {
    distinct(field: SanityGuestFieldsEnum!): [String!]!
    edges: [SanityGuestEdge!]!
    field: String!
    fieldValue: String
    group(field: SanityGuestFieldsEnum!, limit: Int, skip: Int): [SanityGuestGroupConnection!]!
    max(field: SanityGuestFieldsEnum!): Float
    min(field: SanityGuestFieldsEnum!): Float
    nodes: [SanityGuest!]!
    pageInfo: PageInfo!
    sum(field: SanityGuestFieldsEnum!): Float
    totalCount: Int!
}

type SanityImage {
    _key: String
    _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    asset: SanityImageAsset
    crop: SanityImageCrop
    hotspot: SanityImageHotspot
}

type SanityImageAsset implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawMetadata(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    altText: String
    assetId: String
    children: [Node!]!
    description: String
    extension: String
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Background color applied to the wrapper, or when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        """

        Specifies the image widths to generate. You should rarely need to change this. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        fit: SanityImageFit = FILL,
        """

        The image formats to generate. Valid values are AUTO (meaning the same format as the source image), JPG, PNG, WEBP and AVIF.
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [GatsbyImageFormat] = [NO_CHANGE, WEBP],
        "If set, the height of the generated image. If omitted, it is calculated from the supplied width, matching the aspect ratio of the source image."
        height: Int,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: GatsbyImageLayout,
        """

        A list of image pixel densities to generate for FIXED and CONSTRAINED images. You should rarely need to change this. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1, 2] for fluid. In this case, an image with a fluid layout and width = 400 would generate images at 100, 200, 400 and 800px wide.
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        NONE: no placeholder.
        """
        placeholder: SanityGatsbyImagePlaceholder = DOMINANT_COLOR,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download. You can leave this blank for fixed images, or if the responsive image
        container will be the full width of the screen. In these cases we will generate an appropriate value.
        """
        sizes: String,
        """

        The display width of the generated image for layout = FIXED, and the display width of the largest image for layout = CONSTRAINED.
        The actual largest image resolution will be this value multiplied by the largest value in outputPixelDensities
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    label: String
    metadata: SanityImageMetadata
    mimeType: String
    originalFilename: String
    parent: Node
    path: String
    sha1hash: String
    size: Float
    source: SanityAssetSourceData
    title: String
    url: String
}

type SanityImageAssetConnection {
    distinct(field: SanityImageAssetFieldsEnum!): [String!]!
    edges: [SanityImageAssetEdge!]!
    group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
    max(field: SanityImageAssetFieldsEnum!): Float
    min(field: SanityImageAssetFieldsEnum!): Float
    nodes: [SanityImageAsset!]!
    pageInfo: PageInfo!
    sum(field: SanityImageAssetFieldsEnum!): Float
    totalCount: Int!
}

type SanityImageAssetEdge {
    next: SanityImageAsset
    node: SanityImageAsset!
    previous: SanityImageAsset
}

type SanityImageAssetGroupConnection {
    distinct(field: SanityImageAssetFieldsEnum!): [String!]!
    edges: [SanityImageAssetEdge!]!
    field: String!
    fieldValue: String
    group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
    max(field: SanityImageAssetFieldsEnum!): Float
    min(field: SanityImageAssetFieldsEnum!): Float
    nodes: [SanityImageAsset!]!
    pageInfo: PageInfo!
    sum(field: SanityImageAssetFieldsEnum!): Float
    totalCount: Int!
}

type SanityImageCrop {
    _key: String
    _type: String
    bottom: Float
    left: Float
    right: Float
    top: Float
}

type SanityImageDimensions {
    _key: String
    _type: String
    aspectRatio: Float
    height: Float
    width: Float
}

type SanityImageHotspot {
    _key: String
    _type: String
    height: Float
    width: Float
    x: Float
    y: Float
}

type SanityImageMetadata {
    _key: String
    _rawDimensions(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLocation(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawPalette(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    dimensions: SanityImageDimensions
    hasAlpha: Boolean
    isOpaque: Boolean
    location: SanityGeopoint
    lqip: String
    palette: SanityImagePalette
}

type SanityImagePalette {
    _key: String
    _rawDarkMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawDarkVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawDominant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLightMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLightVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    darkMuted: SanityImagePaletteSwatch
    darkVibrant: SanityImagePaletteSwatch
    dominant: SanityImagePaletteSwatch
    lightMuted: SanityImagePaletteSwatch
    lightVibrant: SanityImagePaletteSwatch
    muted: SanityImagePaletteSwatch
    vibrant: SanityImagePaletteSwatch
}

type SanityImagePaletteSwatch {
    _key: String
    _type: String
    background: String
    foreground: String
    population: Float
    title: String
}

type SanitySlug {
    _key: String
    _type: String
    current: String
}

type SanitySpan {
    _key: String
    _type: String
    marks: [String]
    text: String
}

type SanityTag {
    _key: String
    _type: String
    label: String
    value: String
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    jsxRuntime: String
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    max(field: SiteBuildMetadataFieldsEnum!): Float
    min(field: SiteBuildMetadataFieldsEnum!): Float
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    sum(field: SiteBuildMetadataFieldsEnum!): Float
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteFunction implements Node {
    absoluteCompiledFilePath: String!
    children: [Node!]!
    functionRoute: String!
    id: ID!
    internal: Internal!
    matchPath: String
    originalAbsoluteFilePath: String!
    originalRelativeFilePath: String!
    parent: Node
    pluginName: String!
    relativeCompiledFilePath: String!
}

type SiteFunctionConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteFunctionEdge {
    next: SiteFunction
    node: SiteFunction!
    previous: SiteFunction
}

type SiteFunctionGroupConnection {
    distinct(field: SiteFunctionFieldsEnum!): [String!]!
    edges: [SiteFunctionEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFunctionFieldsEnum!, limit: Int, skip: Int): [SiteFunctionGroupConnection!]!
    max(field: SiteFunctionFieldsEnum!): Float
    min(field: SiteFunctionFieldsEnum!): Float
    nodes: [SiteFunction!]!
    pageInfo: PageInfo!
    sum(field: SiteFunctionFieldsEnum!): Float
    totalCount: Int!
}

type SiteGroupConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    max(field: SiteFieldsEnum!): Float
    min(field: SiteFieldsEnum!): Float
    nodes: [Site!]!
    pageInfo: PageInfo!
    sum(field: SiteFieldsEnum!): Float
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    id: ID!
    internal: Internal!
    internalComponentName: String!
    matchPath: String
    pageContext: JSON
    parent: Node
    path: String!
    pluginCreator: SitePlugin
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    max(field: SitePageFieldsEnum!): Float
    min(field: SitePageFieldsEnum!): Float
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    sum(field: SitePageFieldsEnum!): Float
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: JSON
    parent: Node
    pluginFilepath: String
    pluginOptions: JSON
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    max(field: SitePluginFieldsEnum!): Float
    min(field: SitePluginFieldsEnum!): Float
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    sum(field: SitePluginFieldsEnum!): Float
    totalCount: Int!
}

type SiteSiteMetadata {
    description: String
    image: String
    siteUrl: String
    title: String
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___body
    childMdx___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___fileAbsolutePath
    childMdx___frontmatter___date
    childMdx___frontmatter___description
    childMdx___frontmatter___title
    childMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___rawBody
    childMdx___slug
    childMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childMdx___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children
    childrenImageSharp
    childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx
    childrenMdx___body
    childrenMdx___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___fileAbsolutePath
    childrenMdx___frontmatter___date
    childrenMdx___frontmatter___description
    childrenMdx___frontmatter___title
    childrenMdx___headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___rawBody
    childrenMdx___slug
    childrenMdx___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    childrenMdx___wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum GatsbyImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum GatsbyImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum GatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum HeadingsMdx {
    h1
    h2
    h3
    h4
    h5
    h6
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum MdxFieldsEnum {
    body
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    excerpt @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    fileAbsolutePath
    frontmatter___date
    frontmatter___description
    frontmatter___title
    headings @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___depth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    headings___value @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    mdxAST @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    rawBody
    slug
    tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    timeToRead @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___paragraphs @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___sentences @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    wordCount___words @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SanityEpisodeFieldsEnum {
    _createdAt
    _id
    _key
    _rawGuest
    _rawHost
    _rawImage
    _rawSlug
    _rawTags
    _rev
    _type
    _updatedAt
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    date
    demo
    description
    featured
    gatsbyPath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guest
    guest____createdAt
    guest____id
    guest____key
    guest____rawGuestImage
    guest____rev
    guest____type
    guest____updatedAt
    guest___children
    guest___children___children
    guest___children___children___children
    guest___children___children___id
    guest___children___id
    guest___children___internal___content
    guest___children___internal___contentDigest
    guest___children___internal___description
    guest___children___internal___fieldOwners
    guest___children___internal___ignoreType
    guest___children___internal___mediaType
    guest___children___internal___owner
    guest___children___internal___type
    guest___children___parent___children
    guest___children___parent___id
    guest___guestImage____key
    guest___guestImage____rawAsset
    guest___guestImage____rawCrop
    guest___guestImage____rawHotspot
    guest___guestImage____type
    guest___guestImage___asset____createdAt
    guest___guestImage___asset____id
    guest___guestImage___asset____key
    guest___guestImage___asset____rawMetadata
    guest___guestImage___asset____rawSource
    guest___guestImage___asset____rev
    guest___guestImage___asset____type
    guest___guestImage___asset____updatedAt
    guest___guestImage___asset___altText
    guest___guestImage___asset___assetId
    guest___guestImage___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guest___guestImage___asset___description
    guest___guestImage___asset___extension
    guest___guestImage___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guest___guestImage___asset___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guest___guestImage___asset___label
    guest___guestImage___asset___mimeType
    guest___guestImage___asset___originalFilename
    guest___guestImage___asset___path
    guest___guestImage___asset___sha1hash
    guest___guestImage___asset___size
    guest___guestImage___asset___title
    guest___guestImage___asset___url
    guest___guestImage___crop____key
    guest___guestImage___crop____type
    guest___guestImage___crop___bottom
    guest___guestImage___crop___left
    guest___guestImage___crop___right
    guest___guestImage___crop___top
    guest___guestImage___hotspot____key
    guest___guestImage___hotspot____type
    guest___guestImage___hotspot___height
    guest___guestImage___hotspot___width
    guest___guestImage___hotspot___x
    guest___guestImage___hotspot___y
    guest___id
    guest___internal___content
    guest___internal___contentDigest
    guest___internal___description
    guest___internal___fieldOwners
    guest___internal___ignoreType
    guest___internal___mediaType
    guest___internal___owner
    guest___internal___type
    guest___name
    guest___parent___children
    guest___parent___children___children
    guest___parent___children___id
    guest___parent___id
    guest___parent___internal___content
    guest___parent___internal___contentDigest
    guest___parent___internal___description
    guest___parent___internal___fieldOwners
    guest___parent___internal___ignoreType
    guest___parent___internal___mediaType
    guest___parent___internal___owner
    guest___parent___internal___type
    guest___parent___parent___children
    guest___parent___parent___id
    guest___twitter
    hidden
    host____createdAt
    host____id
    host____key
    host____rawGuestImage
    host____rev
    host____type
    host____updatedAt
    host___children
    host___children___children
    host___children___children___children
    host___children___children___id
    host___children___id
    host___children___internal___content
    host___children___internal___contentDigest
    host___children___internal___description
    host___children___internal___fieldOwners
    host___children___internal___ignoreType
    host___children___internal___mediaType
    host___children___internal___owner
    host___children___internal___type
    host___children___parent___children
    host___children___parent___id
    host___guestImage____key
    host___guestImage____rawAsset
    host___guestImage____rawCrop
    host___guestImage____rawHotspot
    host___guestImage____type
    host___guestImage___asset____createdAt
    host___guestImage___asset____id
    host___guestImage___asset____key
    host___guestImage___asset____rawMetadata
    host___guestImage___asset____rawSource
    host___guestImage___asset____rev
    host___guestImage___asset____type
    host___guestImage___asset____updatedAt
    host___guestImage___asset___altText
    host___guestImage___asset___assetId
    host___guestImage___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    host___guestImage___asset___description
    host___guestImage___asset___extension
    host___guestImage___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    host___guestImage___asset___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    host___guestImage___asset___label
    host___guestImage___asset___mimeType
    host___guestImage___asset___originalFilename
    host___guestImage___asset___path
    host___guestImage___asset___sha1hash
    host___guestImage___asset___size
    host___guestImage___asset___title
    host___guestImage___asset___url
    host___guestImage___crop____key
    host___guestImage___crop____type
    host___guestImage___crop___bottom
    host___guestImage___crop___left
    host___guestImage___crop___right
    host___guestImage___crop___top
    host___guestImage___hotspot____key
    host___guestImage___hotspot____type
    host___guestImage___hotspot___height
    host___guestImage___hotspot___width
    host___guestImage___hotspot___x
    host___guestImage___hotspot___y
    host___id
    host___internal___content
    host___internal___contentDigest
    host___internal___description
    host___internal___fieldOwners
    host___internal___ignoreType
    host___internal___mediaType
    host___internal___owner
    host___internal___type
    host___name
    host___parent___children
    host___parent___children___children
    host___parent___children___id
    host___parent___id
    host___parent___internal___content
    host___parent___internal___contentDigest
    host___parent___internal___description
    host___parent___internal___fieldOwners
    host___parent___internal___ignoreType
    host___parent___internal___mediaType
    host___parent___internal___owner
    host___parent___internal___type
    host___parent___parent___children
    host___parent___parent___id
    host___twitter
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image____key
    image____rawAsset
    image____rawCrop
    image____rawHotspot
    image____type
    image___alt
    image___asset____createdAt
    image___asset____id
    image___asset____key
    image___asset____rawMetadata
    image___asset____rawSource
    image___asset____rev
    image___asset____type
    image___asset____updatedAt
    image___asset___altText
    image___asset___assetId
    image___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___description
    image___asset___extension
    image___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___label
    image___asset___metadata____key
    image___asset___metadata____rawDimensions
    image___asset___metadata____rawLocation
    image___asset___metadata____rawPalette
    image___asset___metadata____type
    image___asset___metadata___hasAlpha
    image___asset___metadata___isOpaque
    image___asset___metadata___lqip
    image___asset___mimeType
    image___asset___originalFilename
    image___asset___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___path
    image___asset___sha1hash
    image___asset___size
    image___asset___source____key
    image___asset___source____type
    image___asset___source___id
    image___asset___source___name
    image___asset___source___url
    image___asset___title
    image___asset___url
    image___crop____key
    image___crop____type
    image___crop___bottom
    image___crop___left
    image___crop___right
    image___crop___top
    image___hotspot____key
    image___hotspot____type
    image___hotspot___height
    image___hotspot___width
    image___hotspot___x
    image___hotspot___y
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    links
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    repo
    slug____key
    slug____type
    slug___current
    tags
    tags____key
    tags____type
    tags___label
    tags___value
    title
    transcript
    youtubeID
}

enum SanityFileAssetFieldsEnum {
    _createdAt
    _id
    _key
    _rawSource
    _rev
    _type
    _updatedAt
    altText
    assetId
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    extension
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    label
    mimeType
    originalFilename
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    sha1hash
    size
    source____key
    source____type
    source___id
    source___name
    source___url
    title
    url
}

enum SanityGatsbyImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
}

enum SanityGuestFieldsEnum {
    _createdAt
    _id
    _key
    _rawGuestImage
    _rev
    _type
    _updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    guestImage____key
    guestImage____rawAsset
    guestImage____rawCrop
    guestImage____rawHotspot
    guestImage____type
    guestImage___asset____createdAt
    guestImage___asset____id
    guestImage___asset____key
    guestImage___asset____rawMetadata
    guestImage___asset____rawSource
    guestImage___asset____rev
    guestImage___asset____type
    guestImage___asset____updatedAt
    guestImage___asset___altText
    guestImage___asset___assetId
    guestImage___asset___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___description
    guestImage___asset___extension
    guestImage___asset___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___label
    guestImage___asset___metadata____key
    guestImage___asset___metadata____rawDimensions
    guestImage___asset___metadata____rawLocation
    guestImage___asset___metadata____rawPalette
    guestImage___asset___metadata____type
    guestImage___asset___metadata___hasAlpha
    guestImage___asset___metadata___isOpaque
    guestImage___asset___metadata___lqip
    guestImage___asset___mimeType
    guestImage___asset___originalFilename
    guestImage___asset___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    guestImage___asset___path
    guestImage___asset___sha1hash
    guestImage___asset___size
    guestImage___asset___source____key
    guestImage___asset___source____type
    guestImage___asset___source___id
    guestImage___asset___source___name
    guestImage___asset___source___url
    guestImage___asset___title
    guestImage___asset___url
    guestImage___crop____key
    guestImage___crop____type
    guestImage___crop___bottom
    guestImage___crop___left
    guestImage___crop___right
    guestImage___crop___top
    guestImage___hotspot____key
    guestImage___hotspot____type
    guestImage___hotspot___height
    guestImage___hotspot___width
    guestImage___hotspot___x
    guestImage___hotspot___y
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    twitter
}

enum SanityImageAssetFieldsEnum {
    _createdAt
    _id
    _key
    _rawMetadata
    _rawSource
    _rev
    _type
    _updatedAt
    altText
    assetId
    children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    description
    extension
    gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    label
    metadata____key
    metadata____rawDimensions
    metadata____rawLocation
    metadata____rawPalette
    metadata____type
    metadata___dimensions____key
    metadata___dimensions____type
    metadata___dimensions___aspectRatio
    metadata___dimensions___height
    metadata___dimensions___width
    metadata___hasAlpha
    metadata___isOpaque
    metadata___location____key
    metadata___location____type
    metadata___location___alt
    metadata___location___lat
    metadata___location___lng
    metadata___lqip
    metadata___palette____key
    metadata___palette____rawDarkMuted
    metadata___palette____rawDarkVibrant
    metadata___palette____rawDominant
    metadata___palette____rawLightMuted
    metadata___palette____rawLightVibrant
    metadata___palette____rawMuted
    metadata___palette____rawVibrant
    metadata___palette____type
    metadata___palette___darkMuted____key
    metadata___palette___darkMuted____type
    metadata___palette___darkMuted___background
    metadata___palette___darkMuted___foreground
    metadata___palette___darkMuted___population
    metadata___palette___darkMuted___title
    metadata___palette___darkVibrant____key
    metadata___palette___darkVibrant____type
    metadata___palette___darkVibrant___background
    metadata___palette___darkVibrant___foreground
    metadata___palette___darkVibrant___population
    metadata___palette___darkVibrant___title
    metadata___palette___dominant____key
    metadata___palette___dominant____type
    metadata___palette___dominant___background
    metadata___palette___dominant___foreground
    metadata___palette___dominant___population
    metadata___palette___dominant___title
    metadata___palette___lightMuted____key
    metadata___palette___lightMuted____type
    metadata___palette___lightMuted___background
    metadata___palette___lightMuted___foreground
    metadata___palette___lightMuted___population
    metadata___palette___lightMuted___title
    metadata___palette___lightVibrant____key
    metadata___palette___lightVibrant____type
    metadata___palette___lightVibrant___background
    metadata___palette___lightVibrant___foreground
    metadata___palette___lightVibrant___population
    metadata___palette___lightVibrant___title
    metadata___palette___muted____key
    metadata___palette___muted____type
    metadata___palette___muted___background
    metadata___palette___muted___foreground
    metadata___palette___muted___population
    metadata___palette___muted___title
    metadata___palette___vibrant____key
    metadata___palette___vibrant____type
    metadata___palette___vibrant___background
    metadata___palette___vibrant___foreground
    metadata___palette___vibrant___population
    metadata___palette___vibrant___title
    mimeType
    originalFilename
    parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
    path
    sha1hash
    size
    source____key
    source____type
    source___id
    source___name
    source___url
    title
    url
}

enum SanityImageFit {
    CLIP
    CROP
    FILL
    FILLMAX
    MAX
    MIN
    SCALE
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    jsxRuntime
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___description
    siteMetadata___image
    siteMetadata___siteUrl
    siteMetadata___title
}

enum SiteFunctionFieldsEnum {
    absoluteCompiledFilePath
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    functionRoute
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    originalAbsoluteFilePath
    originalRelativeFilePath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginName
    relativeCompiledFilePath
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    matchPath
    pageContext
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    childMdx: MdxFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    childrenMdx: MdxFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input MdxFilterInput {
    body: StringQueryOperatorInput
    children: NodeFilterListInput
    excerpt: StringQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    frontmatter: MdxFrontmatterFilterInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    mdxAST: JSONQueryOperatorInput
    parent: NodeFilterInput
    rawBody: StringQueryOperatorInput
    slug: StringQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: MdxWordCountFilterInput
}

input MdxFilterListInput {
    elemMatch: MdxFilterInput
}

input MdxFrontmatterFilterInput {
    date: DateQueryOperatorInput
    description: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input MdxHeadingMdxFilterInput {
    depth: IntQueryOperatorInput
    value: StringQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
    elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
    fields: [MdxFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input MdxWordCountFilterInput {
    paragraphs: IntQueryOperatorInput
    sentences: IntQueryOperatorInput
    words: IntQueryOperatorInput
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SanityAssetSourceDataFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    id: StringQueryOperatorInput
    name: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityEpisodeFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawGuest: JSONQueryOperatorInput
    _rawHost: JSONQueryOperatorInput
    _rawImage: JSONQueryOperatorInput
    _rawSlug: JSONQueryOperatorInput
    _rawTags: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    date: DateQueryOperatorInput
    demo: StringQueryOperatorInput
    description: StringQueryOperatorInput
    featured: BooleanQueryOperatorInput
    gatsbyPath: StringQueryOperatorInput
    guest: SanityGuestFilterListInput
    hidden: BooleanQueryOperatorInput
    host: SanityGuestFilterInput
    id: StringQueryOperatorInput
    image: SanityEpisodeImageFilterInput
    internal: InternalFilterInput
    links: StringQueryOperatorInput
    parent: NodeFilterInput
    repo: StringQueryOperatorInput
    slug: SanitySlugFilterInput
    tags: SanityTagFilterListInput
    title: StringQueryOperatorInput
    transcript: StringQueryOperatorInput
    youtubeID: StringQueryOperatorInput
}

input SanityEpisodeImageFilterInput {
    _key: StringQueryOperatorInput
    _rawAsset: JSONQueryOperatorInput
    _rawCrop: JSONQueryOperatorInput
    _rawHotspot: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    alt: StringQueryOperatorInput
    asset: SanityImageAssetFilterInput
    crop: SanityImageCropFilterInput
    hotspot: SanityImageHotspotFilterInput
}

input SanityEpisodeSortInput {
    fields: [SanityEpisodeFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityFileAssetFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawSource: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    altText: StringQueryOperatorInput
    assetId: StringQueryOperatorInput
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    label: StringQueryOperatorInput
    mimeType: StringQueryOperatorInput
    originalFilename: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    sha1hash: StringQueryOperatorInput
    size: FloatQueryOperatorInput
    source: SanityAssetSourceDataFilterInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityFileAssetSortInput {
    fields: [SanityFileAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityGeopointFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    alt: FloatQueryOperatorInput
    lat: FloatQueryOperatorInput
    lng: FloatQueryOperatorInput
}

input SanityGuestFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawGuestImage: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    guestImage: SanityImageFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    parent: NodeFilterInput
    twitter: StringQueryOperatorInput
}

input SanityGuestFilterListInput {
    elemMatch: SanityGuestFilterInput
}

input SanityGuestSortInput {
    fields: [SanityGuestFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityImageAssetFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawMetadata: JSONQueryOperatorInput
    _rawSource: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    altText: StringQueryOperatorInput
    assetId: StringQueryOperatorInput
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    label: StringQueryOperatorInput
    metadata: SanityImageMetadataFilterInput
    mimeType: StringQueryOperatorInput
    originalFilename: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    sha1hash: StringQueryOperatorInput
    size: FloatQueryOperatorInput
    source: SanityAssetSourceDataFilterInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityImageAssetSortInput {
    fields: [SanityImageAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityImageCropFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    bottom: FloatQueryOperatorInput
    left: FloatQueryOperatorInput
    right: FloatQueryOperatorInput
    top: FloatQueryOperatorInput
}

input SanityImageDimensionsFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    aspectRatio: FloatQueryOperatorInput
    height: FloatQueryOperatorInput
    width: FloatQueryOperatorInput
}

input SanityImageFilterInput {
    _key: StringQueryOperatorInput
    _rawAsset: JSONQueryOperatorInput
    _rawCrop: JSONQueryOperatorInput
    _rawHotspot: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    asset: SanityImageAssetFilterInput
    crop: SanityImageCropFilterInput
    hotspot: SanityImageHotspotFilterInput
}

input SanityImageHotspotFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    width: FloatQueryOperatorInput
    x: FloatQueryOperatorInput
    y: FloatQueryOperatorInput
}

input SanityImageMetadataFilterInput {
    _key: StringQueryOperatorInput
    _rawDimensions: JSONQueryOperatorInput
    _rawLocation: JSONQueryOperatorInput
    _rawPalette: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    dimensions: SanityImageDimensionsFilterInput
    hasAlpha: BooleanQueryOperatorInput
    isOpaque: BooleanQueryOperatorInput
    location: SanityGeopointFilterInput
    lqip: StringQueryOperatorInput
    palette: SanityImagePaletteFilterInput
}

input SanityImagePaletteFilterInput {
    _key: StringQueryOperatorInput
    _rawDarkMuted: JSONQueryOperatorInput
    _rawDarkVibrant: JSONQueryOperatorInput
    _rawDominant: JSONQueryOperatorInput
    _rawLightMuted: JSONQueryOperatorInput
    _rawLightVibrant: JSONQueryOperatorInput
    _rawMuted: JSONQueryOperatorInput
    _rawVibrant: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    darkMuted: SanityImagePaletteSwatchFilterInput
    darkVibrant: SanityImagePaletteSwatchFilterInput
    dominant: SanityImagePaletteSwatchFilterInput
    lightMuted: SanityImagePaletteSwatchFilterInput
    lightVibrant: SanityImagePaletteSwatchFilterInput
    muted: SanityImagePaletteSwatchFilterInput
    vibrant: SanityImagePaletteSwatchFilterInput
}

input SanityImagePaletteSwatchFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    background: StringQueryOperatorInput
    foreground: StringQueryOperatorInput
    population: FloatQueryOperatorInput
    title: StringQueryOperatorInput
}

input SanityResolveReferencesConfiguration {
    "Max depth to resolve references to"
    maxDepth: Int!
}

input SanitySlugFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    current: StringQueryOperatorInput
}

input SanityTagFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    label: StringQueryOperatorInput
    value: StringQueryOperatorInput
}

input SanityTagFilterListInput {
    elemMatch: SanityTagFilterInput
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    jsxRuntime: StringQueryOperatorInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SiteFunctionFilterInput {
    absoluteCompiledFilePath: StringQueryOperatorInput
    children: NodeFilterListInput
    functionRoute: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    matchPath: StringQueryOperatorInput
    originalAbsoluteFilePath: StringQueryOperatorInput
    originalRelativeFilePath: StringQueryOperatorInput
    parent: NodeFilterInput
    pluginName: StringQueryOperatorInput
    relativeCompiledFilePath: StringQueryOperatorInput
}

input SiteFunctionSortInput {
    fields: [SiteFunctionFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    matchPath: StringQueryOperatorInput
    pageContext: JSONQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: JSONQueryOperatorInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: JSONQueryOperatorInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    description: StringQueryOperatorInput
    image: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}
